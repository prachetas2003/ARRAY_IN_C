#include <stdio.h>
#include <stdlib.h>

void find_duplicates(int arr[], int n) {
    if (n == 0) {
        printf("Array is empty.\n");
        return;
    }

    // Find the maximum element in the array
    int max_element = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > max_element) {
            max_element = arr[i];
        }
    }

    // Create and initialize the hash table
    int *hash_table = (int *)calloc(max_element + 1, sizeof(int));
    if (hash_table == NULL) {
        printf("Memory allocation failed.\n");
        return;
    }

    // Traverse the array and update the hash table
    for (int i = 0; i < n; i++) {
        hash_table[arr[i]]++;
    }

    // Print the duplicate elements
    printf("Duplicate elements: ");
    for (int i = 0; i <= max_element; i++) {
        if (hash_table[i] > 1) {
            printf("%d ", i);
        }
    }
    printf("\n");

    // Free the allocated memory for the hash table
    free(hash_table);
}

int main() {
    int array[] = {1, 2, 2, 3, 3, 3, 4, 5, 6, 6};
    int n = sizeof(array) / sizeof(array[0]);

    find_duplicates(array, n);

    return 0;
}
